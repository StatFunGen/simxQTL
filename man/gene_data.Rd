% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulate_transQTL_null.R
\name{gene_data}
\alias{gene_data}
\title{Generate gene expression data for trans-QTL analysis}
\usage{
gene_data(
  n,
  p,
  A_snp_cis,
  A_cis_trans,
  A_trans,
  MAF = NULL,
  beta = 1,
  gamma_cis_trans = 0.5,
  gamma_trans_trans = 0.5,
  maf_setting = 1
)
}
\arguments{
\item{n}{Sample size}

\item{p}{Number of SNPs}

\item{A_snp_cis}{Binary adjacency matrix indicating SNP-cis gene relationships}

\item{A_cis_trans}{Binary adjacency matrix indicating cis-trans gene relationships}

\item{A_trans}{Binary adjacency matrix indicating trans-trans gene relationships}

\item{MAF}{Optional vector of minor allele frequencies. If NULL, MAFs will be generated randomly.}

\item{beta}{Effect size for SNP to cis gene effects}

\item{gamma_cis_trans}{Effect size for cis to trans gene effects}

\item{gamma_trans_trans}{Effect size for trans to trans gene effects}

\item{maf_setting}{Integer flag for MAF generation method (1=uniform random, 2=sample from provided MAF)}
}
\value{
A list containing:
\itemize{
  \item maf: Vector of minor allele frequencies
  \item G_unscaled: Unscaled genotype matrix
  \item G: Scaled genotype matrix
  \item G_centered: Column-centered genotype matrix
  \item E_cis_unscaled: Unscaled cis gene expression matrix
  \item E_cis: Scaled cis gene expression matrix
  \item E_cis_centered: Column-centered cis gene expression matrix
  \item E_trans_unscaled: Unscaled trans gene expression matrix
  \item E_trans: Scaled trans gene expression matrix
  \item E_trans_centered: Column-centered trans gene expression matrix
}
}
\description{
This function simulates genotype and gene expression data for trans-QTL analysis, 
including both cis and trans effects with specified network structures.
}
\examples{
# Define adjacency matrices
A_snp_cis <- as.matrix(Matrix::bdiag(lapply(1:8, function(x) rep(1,5))))
A_snp_cis <- rbind(A_snp_cis, matrix(0, nrow = 20, ncol = 8))

A_cis_trans <- cbind(c(1,1,0,0,0,0,0,0),
                    c(0,0,1,1,0,0,0,0),
                    c(0,0,0,0,1,1,0,0),
                    c(0,0,0,0,0,0,1,1),0,0,0,0,0)

A_trans <- cbind(0,0,0,0,c(1,rep(0,8)),
                c(0,1,1,rep(0,6)),
                c(0,0,0,1,rep(0,5)),
                c(0,0,0,0,1,1,0,0,0),
                c(rep(0,5),1,1,0,0))

# Simulate data
data <- gene_data(n = 1000, p = 60, A_snp_cis, A_cis_trans, A_trans,
                  beta = 0.5, gamma_cis_trans = 0.5, gamma_trans_trans = 0.5)

}
